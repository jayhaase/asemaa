<!DOCTYPE html>
<html lang="en" class="h-full">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sacred Tobacco Map</title>
        <link rel="stylesheet" href="{{ '/css/tailwind.css' | url }}">
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@400;500;600;700&display=swap" rel="stylesheet">
        <meta name="description" content="Learn about Ojibwe Asemaa and its historical trading routes across Turtle Island">
        <meta property="og:title" content="Asemaa Map">
        <meta
            property="og:description"
            content="Learn about Ojibwe Asemaa and its historical trading routes across Turtle Island">
        <meta
        property="og:type" content="website"> <!-- Add your site URL here -->
        <meta
        property="og:url" content=""> <!-- Add your site image here -->
        <meta property="og:image" content="">
    </head>
    <body class="h-full">
        <script>
            // Ensure locations is available globally and is an array
            window.locations = {{ locationsArray | dump | safe }};
            
            function sendHeight() {
                const mapContainer = document.querySelector('.map-container');
                const dropdown = document.querySelector('select');
                if (!mapContainer) return;  // Guard against missing element
                
                // Get the main container that includes both map and dropdown
                const mainContent = document.querySelector('main');
                if (!mainContent) return;
                
                // Get the actual content height and dropdown position
                const contentHeight = mainContent.getBoundingClientRect().height;
                const dropdownBottom = dropdown ? dropdown.getBoundingClientRect().bottom : 0;
                const mainTop = mainContent.getBoundingClientRect().top;
                
                // Calculate total height needed including dropdown and padding
                const totalHeight = Math.max(
                    contentHeight,
                    dropdownBottom - mainTop + 50  // Add 50px padding below dropdown
                );
                
                // Add buffer and ensure minimum height
                const finalHeight = Math.max(400, totalHeight);
                
                // Only send if height is reasonable and different from last sent
                if (finalHeight <= 2000 && finalHeight !== window.lastSentHeight) {
                    window.parent.postMessage('setHeight:' + finalHeight, '*');
                    window.parent.postMessage({ height: finalHeight }, '*');
                    window.lastSentHeight = finalHeight;
                }
            }

            // Initial height check with a delay to allow content to render
            setTimeout(sendHeight, 1000);

            // Periodic check every 5 seconds
            setInterval(sendHeight, 5000);

            // Check height on key events
            window.addEventListener('load', () => setTimeout(sendHeight, 1000));
            window.addEventListener('resize', () => {
                clearTimeout(window.resizeTimer);
                window.resizeTimer = setTimeout(sendHeight, 250);
            });
            
            // Check after Alpine loads
            document.addEventListener('alpine:initialized', () => {
                setTimeout(sendHeight, 1000);
            });

            // Check after any DOM changes (excluding height changes)
            const observer = new MutationObserver((mutations) => {
                // Filter out mutations that only change style/height
                const significantChange = mutations.some(mutation => 
                    mutation.type === 'childList' || 
                    (mutation.type === 'attributes' && mutation.attributeName !== 'style')
                );
                
                if (significantChange) {
                    clearTimeout(window.mutationTimer);
                    window.mutationTimer = setTimeout(sendHeight, 250);
                }
            });

            // Start observing when DOM is ready
            document.addEventListener('DOMContentLoaded', () => {
                observer.observe(document.body, { 
                    childList: true, 
                    subtree: true,
                    attributes: true,
                    attributeFilter: ['class', 'src', 'alt'] // Only observe specific attribute changes
                });
                setTimeout(sendHeight, 1000);
            });
        </script>
        <div class="min-h-full">
            <div x-data x-init="$store.locations.init(window.locations)" class="h-full">
                <main class="content font-body container mx-auto px-4 sm:px-6 lg:px-8">
                    <!-- Title and Selector Section -->
                    <div class="mt-0">
                        <div class="inline-flex items-center p-6">
                            <img src="{{ '/images/tobacco-plant.png' | url }}" alt="Leaf" class="w-16 object-contain">
                            <div>
                                <h1 class="text-3xl font-heading">Beishigo Asemaa <span class="text-xl font-normal">- Tobacco First</span></h1>
                                <blockquote class="mt-4 max-w-md">
                                    <p class="text-gray-200 text-lg leading-relaxed">"Traditional tobacco was our first gift from the Creator. These are the stories of the Asemaa seeds gifted to us."</p>
                                    <cite class="text-sm block mt-2 text-gray-300 text-right">— Suzanne Nash</cite>
                                </blockquote>
                            </div>
                        </div>

                        <!-- Location Selector -->
                        <div class="w-64 mt-16 relative z-30">
                            <label for="location-select" class="block text-lg text-gray-100 mb-2">
                                Begin the journey here…
                            </label>
                            <select
                                id="location-select"
                                class="w-full p-3 md:p-2 text-base border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#23545E] focus:border-transparent bg-white"
                                @change="$store.locations.selectLocation($event.target.value);"
                                x-bind:value="$store.locations.selectedLocation?.id || ''">
                                <option value="">Select a Path</option>
                                {% for location in locationsArray %}
                                    {% set indexInList = loop.index0 %}
                                    <option value="{{ location.id }}" data-index="{{ indexInList }}">{{ location.name }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>

                    <!-- Map and Image Container -->
                    <div class="relative flex justify-center -mt-48 translate-x-12">
                        <!-- Location-specific text - Positioned to the left of map -->
                        <div class="absolute left-0 translate-x-1/6 lg:translate-x-[10%] top-1/2 -translate-y-1/2" style="z-index: 20;">
                            <div x-show="$store.locations.selectedLocation && $store.locations.selectedLocation.name === 'Minnesota'"
                                 class="p-4 rounded-2xl bg-opacity-90 text-gray-300 leading-relaxed w-64 border-4 drop-shadow-glow"
                                 style="border-color: #23545E; background-color: #4A7C59;">
                                <p class="text-gray-300 [text-shadow:none]">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation.</p>
                            </div>
                        </div>

                        <!-- Map Area -->
                        <div class="relative map-container mb-0">
                            <div class="relative" style="z-index: 1;">
                                {% include "partials/map-area.njk" %}
                            </div>
                            
                            <!-- Circular Image Viewer -->
                            <div class="absolute bottom-48 right-0 translate-x-1/4" style="z-index: 20;"
                                 x-show="$store.locations.selectedLocation" 
                                 x-transition:enter="transition ease-out duration-300"
                                 x-transition:enter-start="opacity-0"
                                 x-transition:enter-end="opacity-100"
                                 x-transition:leave="transition ease-in duration-300"
                                 x-transition:leave-start="opacity-100"
                                 x-transition:leave-end="opacity-0">
                                <div class="relative w-40 h-40 md:w-48 md:h-48 lg:w-64 lg:h-64 drop-shadow-glow">
                                    <!-- Full circle shape -->
                                    <div class="absolute inset-0 bg-white rounded-full overflow-hidden border-4" 
                                         style="border-color: #23545E;">
                                        <img 
                                            :src="$store.locations.selectedLocation?.imageUrl" 
                                            :alt="$store.locations.selectedLocation?.name"
                                            class="w-full h-full object-cover">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </main>
            </div>
        </div>
        <script defer src="{{ '/js/stores.js' | url }}"></script>
        <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
    </body>
</html>